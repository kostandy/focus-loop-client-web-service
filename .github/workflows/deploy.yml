name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      # Checkout your code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22" # Use the Node.js version you need

      # Cache node modules
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Build the application
      - name: Build the application
        id: build
        env:
          SENTRY_AUTH_TOKEN: ${{ vars.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        run: |
          npm run generate

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist

  deploy:
    runs-on: ubuntu-24.04
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      # Deploy using SCP
      - name: Deploy to server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          TELEGRAM_BOT_ID: ${{ secrets.TELEGRAM_BOT_ID }}
          TELEGRAM_BOT_CHAT_ID: ${{ secrets.TELEGRAM_BOT_CHAT_ID }}
          TELEGRAM_BOT_SUCCESS_MESSAGE: Deployment is over
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
          ssh $SERVER_USER@$SERVER_HOST "rm -rf $SERVER_PATH/public && mkdir -p $SERVER_PATH/public"
          scp -r * $SERVER_USER@$SERVER_HOST:$SERVER_PATH/public
          ssh $SERVER_USER@$SERVER_HOST sh deploy.sh
          response=$(curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_ID/sendMessage" -d "chat_id=$TELEGRAM_BOT_CHAT_ID&text=$TELEGRAM_BOT_SUCCESS_MESSAGE")
          echo $response | grep -q '"ok":true' || { echo "Failed to send message"; exit 1; }
